{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","props","total","perPage","currentPage","itemsOnPage","setCurrentPage","totalPage","Math","ceil","pagesNumbers","Array","from","length","_","i","className","cn","disabled","href","onClick","map","pageNumber","active","item","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","copyItems","slice","firstNumberItemONpage","split","lastNumberItemONpage","id","value","onChange","e","Number","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yNAUaA,EAA8B,SAACC,GAC1C,IACEC,EACED,EADFC,MAAOC,EACLF,EADKE,QAASC,EACdH,EADcG,YAAaC,EAC3BJ,EAD2BI,YAAaC,EACxCL,EADwCK,eAGtCC,EAAaC,KAAKC,KAAKP,EAAQC,GAC/BO,EAAeC,MAAMC,KAAK,CAAEC,OAAQN,IAAa,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAUrE,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBd,IADzC,SAGE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBf,EACfgB,QAnBa,WACrBd,EAAeF,EAAc,IAavB,oBAWDM,EAAaW,KAAI,SAAAC,GAAU,OAC1B,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAAelB,IAH7B,SAOE,mBACE,UAAQ,WACRY,UAAWC,IACT,aAEFE,KAAI,WAAMG,EAAa,GACvBF,QAAS,kBAAMd,EAAegB,IANhC,SAQGA,KAVEA,MAgBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUd,IAAgBM,EAAaG,SAH7C,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAef,IAAgBM,EAAaG,OAC5CO,QAtDa,WACrBd,EAAeF,EAAc,IAgDvB,uBAWJ,6BACGC,EAAYgB,KAAI,SAAAG,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7EzD,IAAMC,ECNC,SAAoBb,EAAcc,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIhB,EAAMgB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBT,KAAI,SAAAO,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,IAKsBT,EALtB,EAAgBU,mBAASP,EAAMZ,QAAxBX,EAAP,oBACA,EAA8B8B,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB8B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO5B,EAAP,KAAoBE,EAApB,KAEM4B,EAAS,YAAOT,GAQhBpB,GAPgBiB,EAOWlB,EAL7B8B,EACGC,OAAOb,EAAa,GAAKnB,GAAUmB,EAAa,GAAKnB,EAAUA,IAKhEiC,EAAyB/B,EAAY,GAAGgC,MAAM,KAAM,GACpDC,EAAwBjC,EAAYA,EAAYQ,OAAS,GAC5DwB,MAAM,KAAM,GAEf,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiCgC,EADjC,cAC4DE,EAD5D,eACuFpC,EADvF,OAIA,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOrC,EACPsC,SAAU,SAACC,GACTT,EAAWU,OAAOD,EAAEE,OAAOJ,QAC3BlC,EAAe,IAPnB,UAUE,wBAAQkC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,YAAaA,EACbC,eAAgBA,QE7DxBwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.718fd6d8.chunk.js","sourcesContent":["import cn from 'classnames';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  itemsOnPage:string[],\n  setCurrentPage:(page : number) => void,\n}\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total, perPage, currentPage, itemsOnPage, setCurrentPage,\n  } = props;\n\n  const totalPage = (Math.ceil(total / perPage));\n  const pagesNumbers = Array.from({ length: totalPage }, (_, i) => i + 1);\n\n  const handelPrevPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  const handelNextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item', { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handelPrevPage}\n          >\n            «\n          </a>\n        </li>\n\n        {pagesNumbers.map(pageNumber => (\n          <li\n            className={cn(\n              'page-item',\n              { active: pageNumber === currentPage },\n            )}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className={cn(\n                'page-link',\n              )}\n              href={`#${pageNumber - 1}`}\n              onClick={() => setCurrentPage(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n\n        ))}\n\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === pagesNumbers.length },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesNumbers.length}\n            onClick={handelNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnPage.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(items.length);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const copyItems = [...items];\n  const onPageChange = (pageNumber: number) => {\n    return (\n      copyItems\n        .slice((pageNumber - 1) * perPage, (pageNumber - 1) * perPage + perPage)\n    );\n  };\n\n  const itemsOnPage = onPageChange(currentPage);\n  const firstNumberItemONpage = (itemsOnPage[0].split(' '))[1];\n  const lastNumberItemONpage = (itemsOnPage[itemsOnPage.length - 1]\n    .split(' '))[1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstNumberItemONpage} - ${lastNumberItemONpage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => {\n              setPerPage(Number(e.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        itemsOnPage={itemsOnPage}\n        setCurrentPage={setCurrentPage}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}